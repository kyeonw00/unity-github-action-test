name: build-android
on:
  workflow_dispatch: {}
jobs:
  build:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          lfs: true
          
      # Cache
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**','ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build UnityPlayer
        uses: game-ci/unity-builder@v2
        id: androidBuildStep
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: Android
          unityVersion: auto
          androidAppBundle: true
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIASE_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIASE_PASS }}

      # Output
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Upload to GooglePlay
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.example.appName
          releaseFile: build.aab
          track: internal
